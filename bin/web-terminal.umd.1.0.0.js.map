{"version":3,"file":"web-terminal.umd.1.0.0.js","sources":["../lib/src/terminalUI.ts","../lib/src/terminalElement.ts","../lib/src/commandHandler.ts","../lib/src/domUtils.ts","../lib/src/eventHandler.ts","../lib/src/main.ts"],"sourcesContent":["const terminalStyle = () => {\n    return `\n.titlebar {\n  padding: 3px 3px;\n  background-color: #f6f6f6;\n}\n\n.titlebar-stoplight {\n  float: left;\n  text-align: left;\n}\n\n.titlebar:after,\n.titlebar-stoplight:after {\n  content: ' ';\n  display: table;\n  clear: both;\n}\n\n.titlebar-stoplight:hover svg,\n.titlebar-stoplight:hover svg.fullscreen-svg,\n.titlebar-stoplight:hover svg.maximize-svg {\n  opacity: 1;\n}\n\n.titlebar.alt svg.fullscreen-svg {\n  display: none;\n}\n\n.titlebar.alt svg.maximize-svg {\n  display: block;\n}\n\n.titlebar-close,\n.titlebar-minimize,\n.titlebar-fullscreen {\n  float: left;\n  width: 11px;\n  height: 11px;\n  border-radius: 50%;\n  margin: 6px 4px;\n  line-height: 0;\n}\n\n.titlebar-close {\n  border: 1px solid #e2463f;\n  background-color: #ff5f57;\n  margin-left: 6px;\n}\n\n.titlebar-close:active {\n  border-color: #ad3934;\n  background-color: #bf4943;\n}\n\n.titlebar-close svg {\n  width: 6px;\n  height: 6px;\n  margin-top: 2px;\n  margin-left: 2px;\n  opacity: 0;\n}\n\n.titlebar-minimize {\n  border: 1px solid #e1a116;\n  background-color: #ffbd2e;\n}\n\n.titlebar-minimize:active {\n  border-color: #ad7d15;\n  background-color: #bf9123;\n}\n\n.titlebar-minimize svg {\n  width: 8px;\n  height: 8px;\n  margin-top: 1px;\n  margin-left: 1px;\n  opacity: 0;\n}\n\n.titlebar-fullscreen,\n.titlebar-maximize {\n  border: 1px solid #12ac28;\n  background-color: #28c940;\n}\n\n.titlebar-fullscreen:active {\n  border-color: #128622;\n  background-color: #1f9a31;\n}\n\n.titlebar-fullscreen svg.fullscreen-svg {\n  width: 6px;\n  height: 6px;\n  margin-top: 2px;\n  margin-left: 2px;\n  opacity: 0;\n}\n\n.titlebar-fullscreen svg.maximize-svg {\n  width: 8px;\n  height: 8px;\n  margin-top: 1px;\n  margin-left: 1px;\n  opacity: 0;\n  display: none;\n}\n\n.window {\n  width: 100%;\n  height: 100%;\n  border-radius: 7px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden; /*Needed to show border-radius */\n}\n\n.window-content {\n  flex: 1;\n  background: black;\n  color: lightgray;\n  overflow: auto;\n}\n\n.history {\n}\n\n.text-input {\n  display: inline-block;\n}\n\n.user-name {\n  display: inline-block;\n  font-family: \"Space Mono\", monospace;\n  font-weight: 700;\n  font-style: normal;\n}\n\n.blinking-character {\n  display: inline-block;\n  align-self: baseline;\n  background: rgba(255, 255, 255, 1);\n  animation: blink 1s step-start 0s infinite;\n}\n\n@keyframes blink {\n  50% {\n    opacity: 0;\n  }\n}\n\n.keyboard-input {\n  border: 0;\n  background: transparent;\n  color: white;\n}\n    \n`;\n}\n\nexport const terminalDOM = (username: string, hostname: string) => {\n    return `\n        <style>\n            ${terminalStyle()}\n        </style>\n        <div id=\"window-frame\" class=\"window\">\n            <div class=\"titlebar\">\n                <div class=\"titlebar-stoplight\">\n                    <div class=\"titlebar-close\">\n                        <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 6.4 6.4\">\n                            <polygon fill=\"#4d0000\" points=\"6.4,0.8 5.6,0 3.2,2.4 0.8,0 0,0.8 2.4,3.2 0,5.6 0.8,6.4 3.2,4 5.6,6.4 6.4,5.6 4,3.2\"></polygon>\n                        </svg>\n                    </div>\n                    <div class=\"titlebar-minimize\">\n                        <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 8 1.1\">\n                            <rect fill=\"#995700\" width=\"8\" height=\"1.1\"></rect>\n                        </svg>\n                    </div>\n                    <div class=\"titlebar-fullscreen\">\n                        <svg class=\"fullscreen-svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 6 5.9\">\n                            <path fill=\"#006400\" d=\"M5.4,0h-4L6,4.5V0.6C5.7,0.6,5.3,0.3,5.4,0z\"></path>\n                            <path fill=\"#006400\" d=\"M0.6,5.9h4L0,1.4l0,3.9C0.3,5.3,0.6,5.6,0.6,5.9z\"></path>\n                        </svg>\n                        <svg class=\"maximize-svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 7.9 7.9\">\n                            <polygon fill=\"#006400\" points=\"7.9,4.5 7.9,3.4 4.5,3.4 4.5,0 3.4,0 3.4,3.4 0,3.4 0,4.5 3.4,4.5 3.4,7.9 4.5,7.9 4.5,4.5\"></polygon>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n            <div id=\"window-content\" class=\"window-content\">\n                <div id=\"history\" class=\"history\"></div>\n                <div class=\"text-input\">\n                    <span class=\"user-name\">${username}@${hostname} %</span>\n                    <span id=\"user-input-text\"></span>\n                    <div class=\"blinking-character\">&nbsp;</div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n","import {terminalDOM} from \"./terminalUI.ts\";\n\nclass TerminalElement extends HTMLElement {\n    constructor() {\n        super();\n        const shadow = this.attachShadow({mode: \"open\"});\n        shadow.innerHTML = terminalDOM(this.getUsername(), this.getHostname());\n    }\n\n    getUsername() {\n        return this.getAttribute('username') || 'root';\n    }\n\n    getHostname() {\n        return this.getAttribute('hostname') || window.location.hostname;\n    }\n\n    getUserInputElement() {\n        if (this.shadowRoot) {\n            return this.shadowRoot.getElementById('user-input-text');\n        }\n    }\n\n    getHistoryContentElement() {\n        if(this.shadowRoot) {\n            return this.shadowRoot.getElementById('history');\n        }\n    }\n}\n\ncustomElements.define(\"terminal-ui\", TerminalElement);\n\nexport default TerminalElement;","let commandJSON: Record<string, any> | null = null;\n\nexport function initializeCommands(commandsFile: string | null) {\n    if (commandsFile) {\n        fetch(commandsFile)\n            .then((response) => response.json())\n            .then((json) => commandJSON = json)\n            .catch((error) => console.error(`Error reading file. Error: ${error}`));\n    } else {\n        console.warn(`No commands file provided.`);\n    }\n}\n\nexport function getCommand(command: string) {\n    return commandJSON ? commandJSON[command] : null;\n}\n\nexport function getAllCommands() {\n    return commandJSON;\n}\n\nexport function getHelpCommandOutput() {\n    if(!commandJSON) {\n        return \"\";\n    }\n\n    const helpString: string[] = [];\n\n    const maxCommandLength = Object.keys(commandJSON).reduce((max: number, command: string) => Math.max(max, command.length), 0);\n\n    console.log(maxCommandLength);\n    for (const command in commandJSON) {\n        const padding = ' '.repeat(maxCommandLength - command.length);\n        helpString.push(`${command}${padding}: ${commandJSON[command].desc}`);\n    }\n    return helpString.join('\\n');\n}","import TerminalElement from \"./terminalElement.ts\";\n\nexport const terminalUI: TerminalElement|null = document.querySelector('terminal-ui');\nexport const historyContent: HTMLElement = terminalUI?.getHistoryContentElement()!;\nexport const userInput: HTMLElement = terminalUI?.getUserInputElement()!;\n\n\nexport function scrollToBottom() {\n    const windowContent = document.getElementById('window-content');\n    if (windowContent) {\n        windowContent.scrollTo(0, windowContent.scrollHeight);\n    }\n}","import {getCommand, getHelpCommandOutput} from './commandHandler';\nimport {historyContent, scrollToBottom, terminalUI, userInput} from \"./domUtils.ts\";\n\nexport function setupEventHandlers() {\n\n    window.addEventListener('keydown', (e) => {\n        switch (e.key) {\n            case \"Enter\":\n                historyContent.innerText += `${terminalUI?.getUsername()}@${terminalUI?.getHostname()} % ${userInput.innerText}\\n`;\n                historyContent.innerText += `${handleCommandInput(userInput.innerText)}\\n`;\n                userInput.innerText = \"\";\n                scrollToBottom();\n                break;\n            case \" \":\n                userInput.innerText += \" \";\n                break;\n            case \"Backspace\":\n                userInput.innerText = userInput.innerText.slice(0, -1);\n                break;\n            default:\n                if (e.key.length === 1) {\n                    userInput.innerText += e.key;\n                }\n        }\n    });\n}\n\n\n\nfunction handleCommandInput(command: string) {\n    if (command === \"help\") {\n        return getHelpCommandOutput();\n    } else {\n        const commandOutput = getCommand(command);\n        if (commandOutput) {\n            return commandOutput.output;\n        } else {\n            return `command not found: ${command}`;\n        }\n    }\n}","import \"./terminalElement.ts\";\nimport {initializeCommands} from './commandHandler';\nimport {setupEventHandlers} from './eventHandler';\nimport {terminalUI} from \"./domUtils.ts\";\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    // Get the file path from the attribute 'commands' and initialize commands list\n    if(terminalUI) {\n        initializeCommands(terminalUI.getAttribute('commands'));\n        setupEventHandlers();\n    }\n});"],"names":["terminalStyle","terminalDOM","username","hostname","TerminalElement","shadow","commandJSON","initializeCommands","commandsFile","response","json","error","getCommand","command","getHelpCommandOutput","helpString","maxCommandLength","max","padding","terminalUI","historyContent","userInput","scrollToBottom","windowContent","setupEventHandlers","e","handleCommandInput","commandOutput"],"mappings":"2FAAA,MAAMA,EAAgB,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgKEC,EAAc,CAACC,EAAkBC,IACnC;AAAA;AAAA,cAEGH,GAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA6BiBE,CAAQ,IAAIC,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MC/LlE,MAAMC,UAAwB,WAAY,CACtC,aAAc,CACJ,QACN,MAAMC,EAAS,KAAK,aAAa,CAAC,KAAM,OAAO,EAC/CA,EAAO,UAAYJ,EAAY,KAAK,cAAe,KAAK,aAAa,CACzE,CAEA,aAAc,CACH,OAAA,KAAK,aAAa,UAAU,GAAK,MAC5C,CAEA,aAAc,CACV,OAAO,KAAK,aAAa,UAAU,GAAK,OAAO,SAAS,QAC5D,CAEA,qBAAsB,CAClB,GAAI,KAAK,WACE,OAAA,KAAK,WAAW,eAAe,iBAAiB,CAE/D,CAEA,0BAA2B,CACvB,GAAG,KAAK,WACG,OAAA,KAAK,WAAW,eAAe,SAAS,CAEvD,CACJ,CAEA,eAAe,OAAO,cAAeG,CAAe,EC9BpD,IAAIE,EAA0C,KAEvC,SAASC,EAAmBC,EAA6B,CACxDA,EACM,MAAAA,CAAY,EACb,KAAMC,GAAaA,EAAS,KAAM,CAAA,EAClC,KAAMC,GAASJ,EAAcI,CAAI,EACjC,MAAOC,GAAU,QAAQ,MAAM,8BAA8BA,CAAK,EAAE,CAAC,EAE1E,QAAQ,KAAK,4BAA4B,CAEjD,CAEO,SAASC,EAAWC,EAAiB,CACjC,OAAAP,EAAcA,EAAYO,CAAO,EAAI,IAChD,CAMO,SAASC,GAAuB,CACnC,GAAG,CAACR,EACO,MAAA,GAGX,MAAMS,EAAuB,CAAA,EAEvBC,EAAmB,OAAO,KAAKV,CAAW,EAAE,OAAO,CAACW,EAAaJ,IAAoB,KAAK,IAAII,EAAKJ,EAAQ,MAAM,EAAG,CAAC,EAE3H,QAAQ,IAAIG,CAAgB,EAC5B,UAAWH,KAAWP,EAAa,CAC/B,MAAMY,EAAU,IAAI,OAAOF,EAAmBH,EAAQ,MAAM,EACjDE,EAAA,KAAK,GAAGF,CAAO,GAAGK,CAAO,KAAKZ,EAAYO,CAAO,EAAE,IAAI,EAAE,CACxE,CACO,OAAAE,EAAW,KAAK;AAAA,CAAI,CAC/B,CClCa,MAAAI,EAAmC,SAAS,cAAc,aAAa,EACvEC,EAA8BD,GAAA,YAAAA,EAAY,2BAC1CE,EAAyBF,GAAA,YAAAA,EAAY,sBAG3C,SAASG,GAAiB,CACvB,MAAAC,EAAgB,SAAS,eAAe,gBAAgB,EAC1DA,GACcA,EAAA,SAAS,EAAGA,EAAc,YAAY,CAE5D,CCTO,SAASC,GAAqB,CAE1B,OAAA,iBAAiB,UAAYC,GAAM,CACtC,OAAQA,EAAE,IAAK,CACX,IAAK,QACcL,EAAA,WAAa,GAAGD,GAAA,YAAAA,EAAY,aAAa,IAAIA,GAAA,YAAAA,EAAY,aAAa,MAAME,EAAU,SAAS;AAAA,EAC9GD,EAAe,WAAa,GAAGM,EAAmBL,EAAU,SAAS,CAAC;AAAA,EACtEA,EAAU,UAAY,GACPC,IACf,MACJ,IAAK,IACDD,EAAU,WAAa,IACvB,MACJ,IAAK,YACDA,EAAU,UAAYA,EAAU,UAAU,MAAM,EAAG,EAAE,EACrD,MACJ,QACQI,EAAE,IAAI,SAAW,IACjBJ,EAAU,WAAaI,EAAE,IAErC,CAAA,CACH,CACL,CAIA,SAASC,EAAmBb,EAAiB,CACzC,GAAIA,IAAY,OACZ,OAAOC,EAAqB,EACzB,CACG,MAAAa,EAAgBf,EAAWC,CAAO,EACxC,OAAIc,EACOA,EAAc,OAEd,sBAAsBd,CAAO,EAE5C,CACJ,CClCA,OAAO,iBAAiB,mBAAoB,IAAM,CAG3CM,IACoBZ,EAAAY,EAAW,aAAa,UAAU,CAAC,EACnCK,IAE3B,CAAC"}